#server
server.port=8081
# tomcat的URI编码
server.tomcat.uri-encoding=UTF-8

context-path:

spring.freemarker.allow-request-override=false
#指定HttpServletRequest的属性是否可以覆盖controller的model的同名项
#spring.freemarker.allow-session-override
#指定HttpSession的属性是否可以覆盖controller的model的同名项
spring.freemarker.cache=true
#是否开启template caching.
spring.freemarker.charset=UTF-8
#设定Template的编码.
spring.freemarker.check-template-location=true
#是否检查templates路径是否存在.
spring.freemarker.content-type=text/html
#设定Content-Type.
spring.freemarker.enabled=true
#是否允许mvc使用freemarker.
#spring.freemarker.expose-request-attributes
#设定所有request的属性在merge到模板的时候，是否要都添加到model中.
#spring.freemarker.expose-session-attributes
#设定所有HttpSession的属性在merge到模板的时候，是否要都添加到model中.
#spring.freemarker.expose-spring-macro-helpers
#设定是否以springMacroRequestContext的形式暴露RequestContext给Spring’s macro library使用
#spring.freemarker.prefer-file-system-access
#是否优先从文件系统加载template，以支持热加载，默认为true
#spring.freemarker.prefix
#设定freemarker模板的前缀.
spring.freemarker.request-context-attribute
#指定RequestContext属性的名.
#spring.freemarker.settings
#设定FreeMarker keys.
spring.freemarker.suffix=.html
#设定模板的后缀.
#spring.freemarker.template-loader-path
#设定模板的加载路径，多个以逗号分隔，默认: ["classpath:/templates/"]
#spring.freemarker.view-names
#指定使用模板的视图列表.